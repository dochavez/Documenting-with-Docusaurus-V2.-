(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{71:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return p})),n.d(t,"default",(function(){return s}));var a=n(2),r=n(6),o=(n(0),n(90)),i={id:"monado",title:"Installation for Linux"},l={unversionedId:"monado",id:"monado",isDocsHomePage:!1,title:"Installation for Linux",description:"Monado is an open source XR runtime delivering immersive experiences such as VR and AR on mobile, PC/desktop, and other devices. Monado aims to be a complete and conformant implementation of the OpenXR API made by Khronos. The project is currently being developed for GNU/Linux and aims to support other operating systems such as Windows in the near future.",source:"@site/docs\\monado.md",slug:"/monado",permalink:"/Documenting-with-Docusaurus-V2.-/docs/monado",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/monado.md",version:"current",sidebar:"someSidebar",previous:{title:"Installation for Windows",permalink:"/Documenting-with-Docusaurus-V2.-/docs/doc5"},next:{title:"Installation Directly",permalink:"/Documenting-with-Docusaurus-V2.-/docs/doc6"}},p=[{value:"About OpenXR and Monado.",id:"about-openxr-and-monado",children:[]},{value:"Monado Requirements.",id:"monado-requirements",children:[]},{value:"Distribution packages.",id:"distribution-packages",children:[{value:"Debian through OBS.",id:"debian-through-obs",children:[]},{value:"CI builds for buster.",id:"ci-builds-for-buster",children:[]},{value:"Ubuntu packages.",id:"ubuntu-packages",children:[]}]}],c={rightToc:p};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Monado is an open source XR runtime delivering immersive experiences such as VR and AR on mobile, PC/desktop, and other devices. Monado aims to be a complete and conformant implementation of the OpenXR API made by Khronos. The project is currently being developed for GNU/Linux and aims to support other operating systems such as Windows in the near future."),Object(o.b)("h2",{id:"about-openxr-and-monado"},"About OpenXR and Monado."),Object(o.b)("p",null,"Software that supports VR by using the OpenXR API requires two software packages to work:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"The OpenXR Loader provided by Khronos\nAn OpenXR runtime like Monado or SteamVR (with OpenXR support)\n")),Object(o.b)("p",null,"OpenXR runtimes like Monado can be though of as \u201cVR headset and VR controller drivers\u201d and the OpenXR loader, analog to the Vulkan loader, is responsible for finding and connecting applications to this \u201cdriver\u201d so that OpenXR applications do not need to interact directly with a runtime.\nApplications link to only the libopenxr_loader.so or .dll library and use the C headers provided by the OpenXR SDK."),Object(o.b)("p",null,"More general background information about OpenXR and OpenXR runtimes can be found at About Runtimes."),Object(o.b)("p",null,"The initial focus of Monado lies on desktop VR usage. In the future a main goal will be to bring Monado to mobile and standalone AR devices, but desktop VR support will remain an important aspect for Monado for the foreseeable future."),Object(o.b)("h2",{id:"monado-requirements"},"Monado Requirements."),Object(o.b)("p",null,"Monado currently runs on Linux. A windows port is in progress."),Object(o.b)("p",null,"The Monado compositor requires a Vulkan driver with the instance extensions:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"VK_KHR_external_fence_capabilities"),Object(o.b)("li",{parentName:"ul"},"VK_KHR_external_memory_capabilities"),Object(o.b)("li",{parentName:"ul"},"VK_KHR_external_semaphore_capabilities"),Object(o.b)("li",{parentName:"ul"},"VK_KHR_get_physical_device_properties2"),Object(o.b)("li",{parentName:"ul"},"VK_KHR_surface")),Object(o.b)("p",null,"For direct mode on Linux/X11"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"VK_KHR_display"),Object(o.b)("li",{parentName:"ul"},"VK_EXT_direct_mode_display"),Object(o.b)("li",{parentName:"ul"},"VK_EXT_acquire_xlib_display")),Object(o.b)("p",null,"Device extensions:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"VK_KHR_dedicated_allocation"),Object(o.b)("li",{parentName:"ul"},"VK_KHR_external_fence"),Object(o.b)("li",{parentName:"ul"},"VK_KHR_external_fence_fd"),Object(o.b)("li",{parentName:"ul"},"VK_KHR_external_memory"),Object(o.b)("li",{parentName:"ul"},"VK_KHR_external_memory_fd"),Object(o.b)("li",{parentName:"ul"},"VK_KHR_external_semaphore"),Object(o.b)("li",{parentName:"ul"},"VK_KHR_external_semaphore_fd"),Object(o.b)("li",{parentName:"ul"},"VK_KHR_get_memory_requirements2"),Object(o.b)("li",{parentName:"ul"},"VK_KHR_swapchain")),Object(o.b)("p",null,"OpenXR applications using Vulkan are supported with all Vulkan drivers that support the listed extensions. In particular radv, intel anv and the nvidia proprietary driver are tested and confirmed to work."),Object(o.b)("p",null,"OpenXR applications using OpenGL require an OpenGL driver with support for the ",Object(o.b)("inlineCode",{parentName:"p"},"GL_EXT_memory_object_fd")," OpenGL extension. OpenGL applications are supported with radeonsi and the nvidia proprietary driver.\nIntel does not currently support this extension in mainline mesa but there are WIP MRs for mesa/iris and for mesa/i965 that have been tested to work with Monado."),Object(o.b)("p",null,"Running Monado with the ",Object(o.b)("inlineCode",{parentName:"p"},"amdvlk Vulkan driver")," generally works but may not render OpenXR applications using OpenGL correctly."),Object(o.b)("h2",{id:"distribution-packages"},"Distribution packages."),Object(o.b)("h3",{id:"debian-through-obs"},"Debian through OBS."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"# Download signing key - fingerprint E841 FAF3 32F5 9D73 9A7F  9D9E FBB1 3322 8F00 CDBA\nwget -nv https://download.opensuse.org/repositories/home:rpavlik:monado/Debian-10/Release.key -O obs-monado.asc\n\n# Add to apt\nsudo mv obs-monado.asc /etc/apt/trusted.gpg.d/\n\n# Add apt repo\necho 'deb http://download.opensuse.org/repositories/home:/rpavlik:/monado/Debian-10/ /' | sudo tee /etc/apt/sources.list.d/monado.list\n\n# Update package lists\nsudo apt update\n")),Object(o.b)("h3",{id:"ci-builds-for-buster"},"CI builds for buster."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"# Download CI signing key\nsudo wget -nv https://people.collabora.com/~rpavlik/monado-ci-packages/monado-ci.asc -O /etc/apt/trusted.gpg.d/monado-ci.asc\n\n# Add apt repo\necho 'deb https://monado.pages.freedesktop.org/monado/apt buster main' | sudo tee /etc/apt/sources.list.d/monado-ci.list\n\n# Update package lists\nsudo apt update\n")),Object(o.b)("h3",{id:"ubuntu-packages"},"Ubuntu packages."),Object(o.b)("p",null,"The core packages are"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"libopenxr-loader1",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"This is libopenxr_loader.so library. OpenXR applications link to this library and can not be compiled/run without it."))),Object(o.b)("li",{parentName:"ul"},"libopenxr-dev",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"The OpenXR headers are required to compile OpenXR C/C++ applications."))),Object(o.b)("li",{parentName:"ul"},"libopenxr1-monado",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"The Monado OpenXR runtime")))),Object(o.b)("p",null,"Useful packages:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"xr-hardware",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"udev rules allowing users without root permissions to use XR hardware, installation is highly recommended"))),Object(o.b)("li",{parentName:"ul"},"libopenxr-utils",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"OpenXR applications and demos, including the hello_xr example\n",Object(o.b)("inlineCode",{parentName:"li"},"openxr-layer-corevalidation")))),Object(o.b)("li",{parentName:"ul"},"A validation layer for OpenXR. Can be enabled with the environment variable ",Object(o.b)("inlineCode",{parentName:"li"},"XR_ENABLE_API_LAYERS=XR_APILAYER_LUNARG_core_validation")),Object(o.b)("li",{parentName:"ul"},"openxr-layer-apidump",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Another layer that can dump all OpenXR calls an application makes to a file"))),Object(o.b)("li",{parentName:"ul"},"monado-cli, monado-gui",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"See ",Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://monado.freedesktop.org/getting-started.html#tools"}),"Tools")," for a detailed description.")))))}s.isMDXComponent=!0},90:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),s=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=s(n),b=a,m=u["".concat(i,".").concat(b)]||u[b]||d[b]||o;return n?r.a.createElement(m,l(l({ref:t},c),{},{components:n})):r.a.createElement(m,l({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=b;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);